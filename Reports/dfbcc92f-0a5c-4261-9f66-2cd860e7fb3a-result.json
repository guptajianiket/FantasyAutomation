{"name": "test_034", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/modal-container/div/div/div/div/div[2]/button\"}\n  (Session info: chrome=108.0.5359.124)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00BDACD3+2075859]\n\tOrdinal0 [0x00B6EE61+1633889]\n\tOrdinal0 [0x00A6B7BD+571325]\n\tOrdinal0 [0x00A9AC2F+764975]\n\tOrdinal0 [0x00A9AE1B+765467]\n\tOrdinal0 [0x00ACD0F2+970994]\n\tOrdinal0 [0x00AB7364+881508]\n\tOrdinal0 [0x00ACB56A+963946]\n\tOrdinal0 [0x00AB7136+880950]\n\tOrdinal0 [0x00A8FEFD+720637]\n\tOrdinal0 [0x00A90F3F+724799]\n\tGetHandleVerifier [0x00E8EED2+2769538]\n\tGetHandleVerifier [0x00E80D95+2711877]\n\tGetHandleVerifier [0x00C6A03A+521194]\n\tGetHandleVerifier [0x00C68DA0+516432]\n\tOrdinal0 [0x00B7682C+1665068]\n\tOrdinal0 [0x00B7B128+1683752]\n\tOrdinal0 [0x00B7B215+1683989]\n\tOrdinal0 [0x00B86484+1729668]\n\tBaseThreadInitThunk [0x74F2FEF9+25]\n\tRtlGetAppContainerNamedObjectPath [0x76F47BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x76F47B8E+238]", "trace": "self = <testCases.Web_Basic_Sanity_Pilot.Test_Websanity object at 0x000001C6A87EA310>\n\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_034(self):\n        time.sleep(1)\n>       self.driver.find_element(By.XPATH,fe_Objects.ok3).click()\n\ntestCases\\Web_Basic_Sanity_Pilot.py:562: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:856: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:434: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C6A8593D30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76F47BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x76F47B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"/html/body/modal-container/div/div/div/div/div[2]/button\"}\nE         (Session info: chrome=108.0.5359.124)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00BDACD3+2075859]\nE       \tOrdinal0 [0x00B6EE61+1633889]\nE       \tOrdinal0 [0x00A6B7BD+571325]\nE       \tOrdinal0 [0x00A9AC2F+764975]\nE       \tOrdinal0 [0x00A9AE1B+765467]\nE       \tOrdinal0 [0x00ACD0F2+970994]\nE       \tOrdinal0 [0x00AB7364+881508]\nE       \tOrdinal0 [0x00ACB56A+963946]\nE       \tOrdinal0 [0x00AB7136+880950]\nE       \tOrdinal0 [0x00A8FEFD+720637]\nE       \tOrdinal0 [0x00A90F3F+724799]\nE       \tGetHandleVerifier [0x00E8EED2+2769538]\nE       \tGetHandleVerifier [0x00E80D95+2711877]\nE       \tGetHandleVerifier [0x00C6A03A+521194]\nE       \tGetHandleVerifier [0x00C68DA0+516432]\nE       \tOrdinal0 [0x00B7682C+1665068]\nE       \tOrdinal0 [0x00B7B128+1683752]\nE       \tOrdinal0 [0x00B7B215+1683989]\nE       \tOrdinal0 [0x00B86484+1729668]\nE       \tBaseThreadInitThunk [0x74F2FEF9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F47BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x76F47B8E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: NoSuchElementException"}, "start": 1671105376417, "stop": 1671105397457, "uuid": "7374b44a-d162-4482-ad6f-319d6f89e71b", "historyId": "95739855e80d354ac3ec366bb1be699b", "testCaseId": "ac0c2180a858f548b2a8e688894ebe09", "fullName": "testCases.Web_Basic_Sanity_Pilot.Test_Websanity#test_034", "labels": [{"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "Web_Basic_Sanity_Pilot"}, {"name": "subSuite", "value": "Test_Websanity"}, {"name": "host", "value": "Aniket-Gupta"}, {"name": "thread", "value": "24312-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.Web_Basic_Sanity_Pilot"}]}