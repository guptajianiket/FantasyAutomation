{"name": "League Tray Contestants", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/ because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/' is not a valid XPath expression.\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x009AACD3+2075859]\n\tOrdinal0 [0x0093EE61+1633889]\n\tOrdinal0 [0x0083B7BD+571325]\n\tOrdinal0 [0x0083E374+582516]\n\tOrdinal0 [0x0083E225+582181]\n\tOrdinal0 [0x0083E4C0+582848]\n\tOrdinal0 [0x0086A9A2+764322]\n\tOrdinal0 [0x0086AE1B+765467]\n\tOrdinal0 [0x0089D0F2+970994]\n\tOrdinal0 [0x00887364+881508]\n\tOrdinal0 [0x0089B56A+963946]\n\tOrdinal0 [0x00887136+880950]\n\tOrdinal0 [0x0085FEFD+720637]\n\tOrdinal0 [0x00860F3F+724799]\n\tGetHandleVerifier [0x00C5EED2+2769538]\n\tGetHandleVerifier [0x00C50D95+2711877]\n\tGetHandleVerifier [0x00A3A03A+521194]\n\tGetHandleVerifier [0x00A38DA0+516432]\n\tOrdinal0 [0x0094682C+1665068]\n\tOrdinal0 [0x0094B128+1683752]\n\tOrdinal0 [0x0094B215+1683989]\n\tOrdinal0 [0x00956484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]", "trace": "self = <testCases.Web_Basic_Sanity_Pilot.Test_Websanity object at 0x00000222A1169580>\n\n    @allure.title(\"League Tray Contestants\")\n    @allure.testcase(testcasedocument, \"Test Case Document\")\n    @allure.tag(\"sanity\", \"user detail popup\", \"web\", \"my league\")\n    @allure.link(testcasereport,\n                 link_type=\"hyperlink\", name=\"Test Case Report\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.step(\"1. Since from the last step, the score info container is opened, click on OK to close it. \"\n                 \"2. Click on the arrow icon. \"\n                 \"3. Check whether the expected number if contestant containers are there or not. \")\n    def test_037(self):\n        \"\"\" To verify the no. of contestant present is as per the added one or not. \"\"\"\n        # click on ok first to close the score info pop up.\n        # click on the arrow button.\n        # check for the contestant containers.\n        time.sleep(1)\n        self.driver.find_element(By.XPATH, fe_Objects.ok3).click()\n        time.sleep(1)\n>       self.driver.find_element(By.XPATH, fe_Sections.teamdetailsx).click()\n\ntestCases\\Web_Basic_Sanity_Pilot.py:970: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:856: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:434: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000222A0678E80>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/ because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/' is not a valid XPath expression.\nE         (Session info: chrome=108.0.5359.125)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x009AACD3+2075859]\nE       \tOrdinal0 [0x0093EE61+1633889]\nE       \tOrdinal0 [0x0083B7BD+571325]\nE       \tOrdinal0 [0x0083E374+582516]\nE       \tOrdinal0 [0x0083E225+582181]\nE       \tOrdinal0 [0x0083E4C0+582848]\nE       \tOrdinal0 [0x0086A9A2+764322]\nE       \tOrdinal0 [0x0086AE1B+765467]\nE       \tOrdinal0 [0x0089D0F2+970994]\nE       \tOrdinal0 [0x00887364+881508]\nE       \tOrdinal0 [0x0089B56A+963946]\nE       \tOrdinal0 [0x00887136+880950]\nE       \tOrdinal0 [0x0085FEFD+720637]\nE       \tOrdinal0 [0x00860F3F+724799]\nE       \tGetHandleVerifier [0x00C5EED2+2769538]\nE       \tGetHandleVerifier [0x00C50D95+2711877]\nE       \tGetHandleVerifier [0x00A3A03A+521194]\nE       \tGetHandleVerifier [0x00A38DA0+516432]\nE       \tOrdinal0 [0x0094682C+1665068]\nE       \tOrdinal0 [0x0094B128+1683752]\nE       \tOrdinal0 [0x0094B215+1683989]\nE       \tOrdinal0 [0x00956484+1729668]\nE       \tBaseThreadInitThunk [0x764C00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: InvalidSelectorException"}, "description": " To verify the no. of contestant present is as per the added one or not. ", "steps": [{"name": "1. Since from the last step, the score info container is opened, click on OK to close it. 2. Click on the arrow icon. 3. Check whether the expected number if contestant containers are there or not. ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/ because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id='wrapper']/div/app-my-league/section/div/div/div[2]/div/div[2]/div[1]/div[1]/div[3]/' is not a valid XPath expression.\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x009AACD3+2075859]\n\tOrdinal0 [0x0093EE61+1633889]\n\tOrdinal0 [0x0083B7BD+571325]\n\tOrdinal0 [0x0083E374+582516]\n\tOrdinal0 [0x0083E225+582181]\n\tOrdinal0 [0x0083E4C0+582848]\n\tOrdinal0 [0x0086A9A2+764322]\n\tOrdinal0 [0x0086AE1B+765467]\n\tOrdinal0 [0x0089D0F2+970994]\n\tOrdinal0 [0x00887364+881508]\n\tOrdinal0 [0x0089B56A+963946]\n\tOrdinal0 [0x00887136+880950]\n\tOrdinal0 [0x0085FEFD+720637]\n\tOrdinal0 [0x00860F3F+724799]\n\tGetHandleVerifier [0x00C5EED2+2769538]\n\tGetHandleVerifier [0x00C50D95+2711877]\n\tGetHandleVerifier [0x00A3A03A+521194]\n\tGetHandleVerifier [0x00A38DA0+516432]\n\tOrdinal0 [0x0094682C+1665068]\n\tOrdinal0 [0x0094B128+1683752]\n\tOrdinal0 [0x0094B215+1683989]\n\tOrdinal0 [0x00956484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\n\n", "trace": "  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\aniket.gupta\\PycharmProjects\\FantasyAutomation\\testCases\\Web_Basic_Sanity_Pilot.py\", line 970, in test_037\n    self.driver.find_element(By.XPATH, fe_Sections.teamdetailsx).click()\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 856, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 434, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1672227609368, "stop": 1672227611439}], "start": 1672227609368, "stop": 1672227611453, "uuid": "2c048a10-3769-4fbc-ba23-faa97cfb050d", "historyId": "7cf605d4bde23b02c05b9b2879ceb27b", "testCaseId": "4e8e3958dcb10d45e48cef78ef8bf201", "fullName": "testCases.Web_Basic_Sanity_Pilot.Test_Websanity#test_037", "labels": [{"name": "tag", "value": "user detail popup"}, {"name": "tag", "value": "my league"}, {"name": "tag", "value": "web"}, {"name": "tag", "value": "sanity"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "Web_Basic_Sanity_Pilot"}, {"name": "subSuite", "value": "Test_Websanity"}, {"name": "host", "value": "Aniket-Gupta"}, {"name": "thread", "value": "25572-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.Web_Basic_Sanity_Pilot"}], "links": [{"type": "hyperlink", "url": "https://moraviait-my.sharepoint.com/:x:/g/personal/anigupta_moravia_com/EfP285he4TZMkmbtv7qCVIUBlZ32Jf-tfggx7CD1JJMKUg?e=S9BFmB", "name": "Test Case Report"}, {"type": "test_case", "url": "https://moraviait-my.sharepoint.com/:w:/g/personal/anigupta_moravia_com/ETq9D_2FRG9At5IHN1JY9FwBCK3YKC5vry8hhhKEVtJAjA?e=iYk53U", "name": "Test Case Document"}]}