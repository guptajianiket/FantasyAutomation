{
  "uid" : "9078818e9fa05449",
  "name" : "League Logo",
  "fullName" : "testCases.Web_Basic_Sanity_Pilot.Test_Websanity#test_051",
  "historyId" : "c4e534ebcc98d0ea880d1efe11efdaf9",
  "time" : {
    "start" : 1672227652104,
    "stop" : 1672227653189,
    "duration" : 1085
  },
  "description" : " To check when clicked on league logo user should land on the 'my league' page.",
  "descriptionHtml" : "<p>To check when clicked on league logo user should land on the 'my league' page.</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-xhl-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x009AACD3+2075859]\n\tOrdinal0 [0x0093EE61+1633889]\n\tOrdinal0 [0x0083B7BD+571325]\n\tOrdinal0 [0x00871499+791705]\n\tOrdinal0 [0x0086F4AC+783532]\n\tOrdinal0 [0x0086D0AB+774315]\n\tOrdinal0 [0x0086BD37+769335]\n\tOrdinal0 [0x00861C76+728182]\n\tOrdinal0 [0x0088731C+881436]\n\tOrdinal0 [0x008615BF+726463]\n\tOrdinal0 [0x00887534+881972]\n\tOrdinal0 [0x0089B56A+963946]\n\tOrdinal0 [0x00887136+880950]\n\tOrdinal0 [0x0085FEFD+720637]\n\tOrdinal0 [0x00860F3F+724799]\n\tGetHandleVerifier [0x00C5EED2+2769538]\n\tGetHandleVerifier [0x00C50D95+2711877]\n\tGetHandleVerifier [0x00A3A03A+521194]\n\tGetHandleVerifier [0x00A38DA0+516432]\n\tOrdinal0 [0x0094682C+1665068]\n\tOrdinal0 [0x0094B128+1683752]\n\tOrdinal0 [0x0094B215+1683989]\n\tOrdinal0 [0x00956484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]",
  "statusTrace" : "self = <testCases.Web_Basic_Sanity_Pilot.Test_Websanity object at 0x00000222A1169D60>\n\n    @allure.title(\"League Logo\")\n    @allure.testcase(testcasedocument, \"Test Case Document\")\n    @allure.tag(\"sanity\", \"user detail popup\", \"web\", \"league logo\")\n    @allure.link(testcasereport,\n                 link_type=\"hyperlink\", name=\"Test Case Report\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.step(\"1. Since user is already on my league page, click on user profile icon. \"\n                 \"2. Click on the league logo from the header. \"\n                 \"3. Get the current url. \"\n                 \"4. Compare the current url with the saved my league url in the script. \")\n    def test_051(self):\n        \"\"\" To check when clicked on league logo user should land on the 'my league' page.\"\"\"\n        # since till above step user is already in my league page, first we will make\n        # the user land on different page and from there will be clicking on the\n        # league icon and then result will be saved by comparing url\n    \n>       self.driver.find_element(By.XPATH,fe_Objects.profileicon).click()\n\ntestCases\\Web_Basic_Sanity_Pilot.py:1301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:88: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:396: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:434: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000222A0678E80>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-xhl-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\nE         (Session info: chrome=108.0.5359.125)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x009AACD3+2075859]\nE       \tOrdinal0 [0x0093EE61+1633889]\nE       \tOrdinal0 [0x0083B7BD+571325]\nE       \tOrdinal0 [0x00871499+791705]\nE       \tOrdinal0 [0x0086F4AC+783532]\nE       \tOrdinal0 [0x0086D0AB+774315]\nE       \tOrdinal0 [0x0086BD37+769335]\nE       \tOrdinal0 [0x00861C76+728182]\nE       \tOrdinal0 [0x0088731C+881436]\nE       \tOrdinal0 [0x008615BF+726463]\nE       \tOrdinal0 [0x00887534+881972]\nE       \tOrdinal0 [0x0089B56A+963946]\nE       \tOrdinal0 [0x00887136+880950]\nE       \tOrdinal0 [0x0085FEFD+720637]\nE       \tOrdinal0 [0x00860F3F+724799]\nE       \tGetHandleVerifier [0x00C5EED2+2769538]\nE       \tGetHandleVerifier [0x00C50D95+2711877]\nE       \tGetHandleVerifier [0x00A3A03A+521194]\nE       \tGetHandleVerifier [0x00A38DA0+516432]\nE       \tOrdinal0 [0x0094682C+1665068]\nE       \tOrdinal0 [0x0094B128+1683752]\nE       \tOrdinal0 [0x0094B215+1683989]\nE       \tOrdinal0 [0x00956484+1729668]\nE       \tBaseThreadInitThunk [0x764C00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: ElementClickInterceptedException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : " To check when clicked on league logo user should land on the 'my league' page.",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-xhl-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x009AACD3+2075859]\n\tOrdinal0 [0x0093EE61+1633889]\n\tOrdinal0 [0x0083B7BD+571325]\n\tOrdinal0 [0x00871499+791705]\n\tOrdinal0 [0x0086F4AC+783532]\n\tOrdinal0 [0x0086D0AB+774315]\n\tOrdinal0 [0x0086BD37+769335]\n\tOrdinal0 [0x00861C76+728182]\n\tOrdinal0 [0x0088731C+881436]\n\tOrdinal0 [0x008615BF+726463]\n\tOrdinal0 [0x00887534+881972]\n\tOrdinal0 [0x0089B56A+963946]\n\tOrdinal0 [0x00887136+880950]\n\tOrdinal0 [0x0085FEFD+720637]\n\tOrdinal0 [0x00860F3F+724799]\n\tGetHandleVerifier [0x00C5EED2+2769538]\n\tGetHandleVerifier [0x00C50D95+2711877]\n\tGetHandleVerifier [0x00A3A03A+521194]\n\tGetHandleVerifier [0x00A38DA0+516432]\n\tOrdinal0 [0x0094682C+1665068]\n\tOrdinal0 [0x0094B128+1683752]\n\tOrdinal0 [0x0094B215+1683989]\n\tOrdinal0 [0x00956484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]",
    "statusTrace" : "self = <testCases.Web_Basic_Sanity_Pilot.Test_Websanity object at 0x00000222A1169D60>\n\n    @allure.title(\"League Logo\")\n    @allure.testcase(testcasedocument, \"Test Case Document\")\n    @allure.tag(\"sanity\", \"user detail popup\", \"web\", \"league logo\")\n    @allure.link(testcasereport,\n                 link_type=\"hyperlink\", name=\"Test Case Report\")\n    @allure.severity(allure.severity_level.MINOR)\n    @allure.step(\"1. Since user is already on my league page, click on user profile icon. \"\n                 \"2. Click on the league logo from the header. \"\n                 \"3. Get the current url. \"\n                 \"4. Compare the current url with the saved my league url in the script. \")\n    def test_051(self):\n        \"\"\" To check when clicked on league logo user should land on the 'my league' page.\"\"\"\n        # since till above step user is already in my league page, first we will make\n        # the user land on different page and from there will be clicking on the\n        # league icon and then result will be saved by comparing url\n    \n>       self.driver.find_element(By.XPATH,fe_Objects.profileicon).click()\n\ntestCases\\Web_Basic_Sanity_Pilot.py:1301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:88: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:396: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:434: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000222A0678E80>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-xhl-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\nE         (Session info: chrome=108.0.5359.125)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x009AACD3+2075859]\nE       \tOrdinal0 [0x0093EE61+1633889]\nE       \tOrdinal0 [0x0083B7BD+571325]\nE       \tOrdinal0 [0x00871499+791705]\nE       \tOrdinal0 [0x0086F4AC+783532]\nE       \tOrdinal0 [0x0086D0AB+774315]\nE       \tOrdinal0 [0x0086BD37+769335]\nE       \tOrdinal0 [0x00861C76+728182]\nE       \tOrdinal0 [0x0088731C+881436]\nE       \tOrdinal0 [0x008615BF+726463]\nE       \tOrdinal0 [0x00887534+881972]\nE       \tOrdinal0 [0x0089B56A+963946]\nE       \tOrdinal0 [0x00887136+880950]\nE       \tOrdinal0 [0x0085FEFD+720637]\nE       \tOrdinal0 [0x00860F3F+724799]\nE       \tGetHandleVerifier [0x00C5EED2+2769538]\nE       \tGetHandleVerifier [0x00C50D95+2711877]\nE       \tGetHandleVerifier [0x00A3A03A+521194]\nE       \tGetHandleVerifier [0x00A38DA0+516432]\nE       \tOrdinal0 [0x0094682C+1665068]\nE       \tOrdinal0 [0x0094B128+1683752]\nE       \tOrdinal0 [0x0094B215+1683989]\nE       \tOrdinal0 [0x00956484+1729668]\nE       \tBaseThreadInitThunk [0x764C00F9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "1. Since user is already on my league page, click on user profile icon. 2. Click on the league logo from the header. 3. Get the current url. 4. Compare the current url with the saved my league url in the script. ",
      "time" : {
        "start" : 1672227652105,
        "stop" : 1672227653183,
        "duration" : 1078
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-xhl-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x009AACD3+2075859]\n\tOrdinal0 [0x0093EE61+1633889]\n\tOrdinal0 [0x0083B7BD+571325]\n\tOrdinal0 [0x00871499+791705]\n\tOrdinal0 [0x0086F4AC+783532]\n\tOrdinal0 [0x0086D0AB+774315]\n\tOrdinal0 [0x0086BD37+769335]\n\tOrdinal0 [0x00861C76+728182]\n\tOrdinal0 [0x0088731C+881436]\n\tOrdinal0 [0x008615BF+726463]\n\tOrdinal0 [0x00887534+881972]\n\tOrdinal0 [0x0089B56A+963946]\n\tOrdinal0 [0x00887136+880950]\n\tOrdinal0 [0x0085FEFD+720637]\n\tOrdinal0 [0x00860F3F+724799]\n\tGetHandleVerifier [0x00C5EED2+2769538]\n\tGetHandleVerifier [0x00C50D95+2711877]\n\tGetHandleVerifier [0x00A3A03A+521194]\n\tGetHandleVerifier [0x00A38DA0+516432]\n\tOrdinal0 [0x0094682C+1665068]\n\tOrdinal0 [0x0094B128+1683752]\n\tOrdinal0 [0x0094B215+1683989]\n\tOrdinal0 [0x00956484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]\n\n",
      "statusTrace" : "  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\aniket.gupta\\PycharmProjects\\FantasyAutomation\\testCases\\Web_Basic_Sanity_Pilot.py\", line 1301, in test_051\n    self.driver.find_element(By.XPATH,fe_Objects.profileicon).click()\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 88, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 396, in _execute\n    return self._parent.execute(command, params)\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 434, in execute\n    self.error_handler.check_response(response)\n  File \"c:\\users\\aniket.gupta\\pycharmprojects\\fantasyautomation\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 243, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "hasContent" : true,
      "stepsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 0,
    "hasContent" : true,
    "stepsCount" : 1
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "user detail popup"
  }, {
    "name" : "severity",
    "value" : "minor"
  }, {
    "name" : "tag",
    "value" : "league logo"
  }, {
    "name" : "tag",
    "value" : "web"
  }, {
    "name" : "tag",
    "value" : "sanity"
  }, {
    "name" : "parentSuite",
    "value" : "testCases"
  }, {
    "name" : "suite",
    "value" : "Web_Basic_Sanity_Pilot"
  }, {
    "name" : "subSuite",
    "value" : "Test_Websanity"
  }, {
    "name" : "host",
    "value" : "Aniket-Gupta"
  }, {
    "name" : "thread",
    "value" : "25572-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCases.Web_Basic_Sanity_Pilot"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "Test Case Report",
    "url" : "https://moraviait-my.sharepoint.com/:x:/g/personal/anigupta_moravia_com/EfP285he4TZMkmbtv7qCVIUBlZ32Jf-tfggx7CD1JJMKUg?e=S9BFmB",
    "type" : "hyperlink"
  }, {
    "name" : "Test Case Document",
    "url" : "https://moraviait-my.sharepoint.com/:w:/g/personal/anigupta_moravia_com/ETq9D_2FRG9At5IHN1JY9FwBCK3YKC5vry8hhhKEVtJAjA?e=iYk53U",
    "type" : "test_case"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "minor",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 3,
        "skipped" : 0,
        "passed" : 1,
        "unknown" : 0,
        "total" : 4
      },
      "items" : [ {
        "uid" : "99a754a0c7607a05",
        "reportUrl" : "http://example.org/build#13/AllureReport/#testresult/99a754a0c7607a05",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-gpa-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1155, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" aria-modal=\"true\" style=\"display: block;\">...</modal-container>\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00E6ACD3+2075859]\n\tOrdinal0 [0x00DFEE61+1633889]\n\tOrdinal0 [0x00CFB7BD+571325]\n\tOrdinal0 [0x00D31499+791705]\n\tOrdinal0 [0x00D2F4AC+783532]\n\tOrdinal0 [0x00D2D0AB+774315]\n\tOrdinal0 [0x00D2BD37+769335]\n\tOrdinal0 [0x00D21C76+728182]\n\tOrdinal0 [0x00D4731C+881436]\n\tOrdinal0 [0x00D215BF+726463]\n\tOrdinal0 [0x00D47534+881972]\n\tOrdinal0 [0x00D5B56A+963946]\n\tOrdinal0 [0x00D47136+880950]\n\tOrdinal0 [0x00D1FEFD+720637]\n\tOrdinal0 [0x00D20F3F+724799]\n\tGetHandleVerifier [0x0111EED2+2769538]\n\tGetHandleVerifier [0x01110D95+2711877]\n\tGetHandleVerifier [0x00EFA03A+521194]\n\tGetHandleVerifier [0x00EF8DA0+516432]\n\tOrdinal0 [0x00E0682C+1665068]\n\tOrdinal0 [0x00E0B128+1683752]\n\tOrdinal0 [0x00E0B215+1683989]\n\tOrdinal0 [0x00E16484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]",
        "time" : {
          "start" : 1672063049441,
          "stop" : 1672063050533,
          "duration" : 1092
        }
      }, {
        "uid" : "97860a176c9e52e3",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a _ngcontent-ihy-c1=\"\" href=\"/common/profile\">...</a> is not clickable at point (1146, 27). Other element would receive the click: <modal-container class=\"modal fade show\" role=\"dialog\" tabindex=\"-1\" style=\"display: block;\" aria-modal=\"true\">...</modal-container>\n  (Session info: chrome=108.0.5359.125)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00E6ACD3+2075859]\n\tOrdinal0 [0x00DFEE61+1633889]\n\tOrdinal0 [0x00CFB7BD+571325]\n\tOrdinal0 [0x00D31499+791705]\n\tOrdinal0 [0x00D2F4AC+783532]\n\tOrdinal0 [0x00D2D0AB+774315]\n\tOrdinal0 [0x00D2BD37+769335]\n\tOrdinal0 [0x00D21C76+728182]\n\tOrdinal0 [0x00D4731C+881436]\n\tOrdinal0 [0x00D215BF+726463]\n\tOrdinal0 [0x00D47534+881972]\n\tOrdinal0 [0x00D5B56A+963946]\n\tOrdinal0 [0x00D47136+880950]\n\tOrdinal0 [0x00D1FEFD+720637]\n\tOrdinal0 [0x00D20F3F+724799]\n\tGetHandleVerifier [0x0111EED2+2769538]\n\tGetHandleVerifier [0x01110D95+2711877]\n\tGetHandleVerifier [0x00EFA03A+521194]\n\tGetHandleVerifier [0x00EF8DA0+516432]\n\tOrdinal0 [0x00E0682C+1665068]\n\tOrdinal0 [0x00E0B128+1683752]\n\tOrdinal0 [0x00E0B215+1683989]\n\tOrdinal0 [0x00E16484+1729668]\n\tBaseThreadInitThunk [0x764C00F9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77007BBE+286]\n\tRtlGetAppContainerNamedObjectPath [0x77007B8E+238]",
        "time" : {
          "start" : 1672060856733,
          "stop" : 1672060857828,
          "duration" : 1095
        }
      }, {
        "uid" : "4439a26566b6353e",
        "status" : "passed",
        "time" : {
          "start" : 1671879910765,
          "stop" : 1671879911036,
          "duration" : 271
        }
      } ]
    },
    "tags" : [ "web", "league logo", "sanity", "user detail popup" ]
  },
  "source" : "9078818e9fa05449.json",
  "parameterValues" : [ ]
}